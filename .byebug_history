c
ids
n
c
ids
n
c
n
flash
c
params[:checkout].present?
params[:checkin].present?
params
n
c
cc
c
n
flash
n
c
flash
n
c
n
flash
c
n
flash["danger"].blank?
flash["danger"]
flash[:danger]
flash
n
m
n
c
n
flash
c
flash
n
flash
c
flash
c
flash
c
n
flash
c
flash.each{|m,m2| puts "--------#{m}-------#{m2}" }
flash.each{|m,m2| puts m }
flash.now.first
flash.now
flash
n
flash.first
flash
n
c
n
flash.first
flash
n
flash.first
flash
n
flash.first
flash.size
flash.count
flash.size
flash.first
flash
n
c
n
c
n
c
n
params[:checkin].present?
params
c
avail_rooms
n
avail_rooms
n
c
ids.flatten
ids
avail_rooms
n
c
ids
@all_bookings
n
c
@rooms.size
@rooms = Room.where("room_type=?", params[:room_type]).where.not(id: rooms_booked)
Room.where("room_type=?", params[:room_type]).where.not(id: rooms_booked)
Room.where("room_type=?", params[:room_type]).not(id: rooms_booked)
rooms_booked
n
c
Room.where(id: ids).pluck(:id)
ids
@rooms = Room.where("room_type=?", params[:room_type]).delete rooms_booked
@rooms = Room.where("room_type=?", params[:room_type]).merge rooms_booked
@rooms = Room.where("room_type=?", params[:room_type]).reject rooms_booked
@rooms.size
@rooms = Room.where("room_type=?", params[:room_type]).except rooms_booked
 Room.where("room_type=?", params[:room_type]).except rooms_booked
rooms_booked.methods
 Room.where("room_type=?", params[:room_type]) - rooms_booked
rooms_booked
 Room.where("room_type=?", params[:room_type])
n
nn
n
c
rooms_booked
Room.where("room_type=?", params[:room_type])
Room.where("room_type=?", params[:room_type]) - rooms_booked
Room.where("room_type=?", params[:room_type])
rooms_booked
n
c
Room.where("room_type=?", 'PS') - (Room.find(53).to_array)
Room.where("room_type=?", 'PS') - (Room.find(53))
Room.where("room_type=?", 'PS') - rooms_booked
Room.where("room_type=?", params[:room_type]) - rooms_booked
exception
n
rooms_booked
n
ids
n
@all_bookings
n
c
params
@all_bookings
n
c
params
@all_bookings
ids
n
c
@all_bookings.first.rooms
@all_bookings.first
@all_bookings.first.rooms.pluck(:id)
@all_bookings.first.rooms
@all_bookings.first
@all_bookings
ids
@all_bookings.present? ? @all_bookings.each{|booking| ids << booking.rooms.pluck(:id)} : []
rooms_booked = Room.find(ids)
rooms_booked = @all_bookings.present? ? @all_bookings.each{|booking| ids << booking.rooms.pluck(:id)} : []
@rooms 
rooms_booked.count
rooms_booked
@rooms.count
@rooms = @rooms - rooms_booked
@rooms - rooms_booked
rooms_booked = @all_bookings.present? ? @all_bookings.each{|booking|ids << booking.rooms} : []
ids = []
rooms_booked = @all_bookings.present? ? @all_bookings.each{|booking|ids << booking.rooms} : []
@all_bookings
@rooms.count
@rooms = Room.where("room_type=?", params[:room_type])
@ rooms = Room.where("room_type=?", params[:room_type])
Room.where("room_type=?", params[:room_type])
params
n
c
cc
c
n
c
n
c
n
c
n
c
cc
c
avail_rooms.count
n
q
Room.all.size
avail_rooms
n
c
avail_rooms
n
rooms_booked
n
c
avail_rooms
avail_rooms.map!{|i| i.id}
avail_rooms
n
c
n
avail_rooms
n
rooms_booked
n
c
exception
n
c
exception
exceptin
n
c
@all_bookings.first.booking_details
@all_bookings.first
@all_bookings
n
c
@all_bookings
n
c
params[:checkin].to_date
params[:checkin].to_date("dd-mm-yyyy")
params[:checkin].parse("dd-mm-yyyy")
params[:checkin].format("dd-mm-yyyy")
params[:checkin]
params[:start_date]
@all_bookings
n
params
c
n
c
n
ids
n
avail_ids
n
c
exception
n
avail_ids
n
booked_ids
n
c
exception
n
ids
n
c
